subprojects {

    apply plugin: 'groovy'
   
    dependencies {
        testImplementation "org.spockframework:spock-core:2.0-M4-groovy-3.0"
        //testImplementation "org.spockframework:spock-core:1.3-groovy-2.4"
        testImplementation "net.bytebuddy:byte-buddy:1.10.9" // needed by spock to mock non-interface types
        testImplementation "org.objenesis:objenesis:1.2" // needed by spock to mock constructors for non-interface types

        testImplementation( 'com.athaydes:spock-reports:2.0-RC2' ) {
            transitive = false // this avoids affecting your version of Groovy/Spock
        }
        testImplementation "org.codehaus.groovy:groovy-templates:3.0.6" // needed by spock-reports
        testImplementation "org.codehaus.groovy:groovy-xml:3.0.6" // needed by spock-reports
        testImplementation "org.codehaus.groovy:groovy-json:3.0.6" // needed by spock-reports
    }
    
    def testConfig = {
        useJUnitPlatform()

        testLogging.showStandardStreams = true
        reports {
            html.enabled false
            junitXml.enabled = false
        }

        systemProperty 'com.athaydes.spockframework.report.outputDir', "$rootProject.buildDir/reports/spock"
        systemProperty 'com.athaydes.spockframework.report.showCodeBlocks', 'true'
        systemProperty 'com.athaydes.spockframework.report.projectName', rootProject.name
        systemProperty 'com.athaydes.spockframework.report.projectVersion', rootProject.version
        systemProperty 'com.athaydes.spockframework.report.projectVersion', rootProject.version
        systemProperty 'logback.configurationFile', new File(rootProject.projectDir,'src/test/resources/logback-test.xml').absolutePath
        systemProperty 'spock.configuration', new File(rootProject.projectDir,'src/test/resources/SpockConfig.groovy').absolutePath
    }

    test.with testConfig

    //TODO: can we use SpockConfig.groovy from xtraplatform jar?
    //TODO: move this whole file to bundle plugin
    //TODO: additional tags, e.g. End2End
    task slowTest(type: Test) {
        with testConfig
        systemProperty 'spock.include.Slow', 'true'
    }

    /*tasks.withType(Test).configureEach { testTask ->
        testTask.configure {
            useJUnitPlatform()

            afterSuite { desc, result ->
                if (!desc.parent) {
                    if (result.testCount == 0) {
                        throw new IllegalStateException("No tests were found. Failing the build")
                    }
                }
            }
        }
    }*/
}