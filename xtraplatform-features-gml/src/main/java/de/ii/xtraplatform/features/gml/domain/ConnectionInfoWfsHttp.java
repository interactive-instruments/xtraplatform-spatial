/**
 * Copyright 2022 interactive instruments GmbH
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
package de.ii.xtraplatform.features.gml.domain;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import de.ii.xtraplatform.features.gml.infra.WfsConnectorHttp;
import de.ii.xtraplatform.features.domain.ConnectionInfo;
import javax.annotation.Nullable;
import org.immutables.value.Value;

import java.net.URI;
import java.util.Map;
import java.util.Optional;

/**
 * @author zahnen
 */

/**
 * @langEn The connection info object for WFS has the following properties:
 * @langDe Das Connection-Info-Objekt für OGC Web Feature Services wird wie folgt beschrieben:
 */

/**
 * @example <code>
 * ```yaml
 * connectorType: HTTP
 * version: 2.0.0
 * gmlVersion: 3.2.1
 * namespaces:
 *   ave: http://rexample.com/ns/app/1.0
 *   wfs: http://www.opengis.net/wfs/2.0
 *   fes: http://www.opengis.net/fes/2.0
 *   gml: http://www.opengis.net/gml/3.2
 *   xsd: http://www.w3.org/2001/XMLSchema
 *   ows: http://www.opengis.net/ows/1.1
 *   xlink: http://www.w3.org/1999/xlink
 *   xsi: http://www.w3.org/2001/XMLSchema-instance
 * uri: https://example.com/pfad/zum/wfs?
 * method: GET
 * ```
 * </code>
 */

/**
 * # Path Syntax
 * @langEn The paths for WFS feature providers are generated by ldproxy when analyzing the WFS und should not be changed.
 * @langDe Die Pfade in den WFS-Feature-Providern werden von ldproxy bei der Analyse des WFS gebildet und sollten nicht verändert werden.
 */
@Value.Immutable
@Value.Style(builder = "new")
@JsonDeserialize(builder = ImmutableConnectionInfoWfsHttp.Builder.class)
public interface ConnectionInfoWfsHttp extends ConnectionInfo, WfsInfo {

    /**
     * @langEn The HTTP method to use, `GET` or `POST`.
     * @langDe Die bevorzugt zu verwendende HTTP-Methode, `GET` oder `POST`.
     * @default `GET`
     */
    enum METHOD {GET,POST}

    /**
     * @langEn Always `HTTP`.
     * @langDe Stets `HTTP`.
     * @default
     */
    @Override
    @Value.Derived
    default String getConnectorType() {
        return WfsConnectorHttp.CONNECTOR_TYPE;
    }

    /**
     * @langEn The URI of the GetCapabilities operation for the WFS.
     * @langDe Die URI der GetCapabilities-Operation des WFS.
     * @default
     */
    @Nullable
    URI getUri();

    @JsonProperty(access = JsonProperty.Access.WRITE_ONLY) // means only read from json
    @Value.Default
    default METHOD getMethod() {
        return METHOD.GET;
    }

    /**
     * @langEn The user name for HTTP Basic Auth.
     * @langDe Der Benutzername.
     * @default
     */
    Optional<String> getUser();

    /**
     * @langEn The base64 encoded password  for HTTP Basic Auth.
     * @langDe Das mit base64 verschüsselte Passwort des Benutzers.
     * @default
     */
    Optional<String> getPassword();

    /**
     * @lang_en
     * @de
     * @default
     */
    Map<String,String> getOtherUrls();
}
